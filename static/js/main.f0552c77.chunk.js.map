{"version":3,"sources":["redux/reducer.js","components/Todoitem.js","components/DisplayTodos.js","components/Todos.js","App.js","redux/store.js","index.js"],"names":["addTodoReducer","createSlice","name","initialState","reducers","addTods","state","action","push","payload","removeTodos","filter","item","id","updateTodos","map","todo","this","completeTodos","completed","actions","reducer","Todoitem","props","updateTodo","completeTodo","removeTodo","inputRef","useRef","className","ref","disabled","defaultValue","onKeyPress","e","value","which","current","update","onClick","focus","style","color","connect","todos","dispatch","addTodo","obj","useState","sort","setSort","length","setTodo","type","onChange","target","handleChange","Math","floor","random","App","motion","h1","whileHover","scale","animate","y","initial","transition","duration","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0552c77.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n const initialState =[];\r\n\r\n const addTodoReducer = createSlice({\r\n     name:\"todos\",\r\n     initialState,\r\n     reducers:{\r\n         addTods:(state,action) => {\r\n             state.push(action.payload);\r\n             return state;\r\n         },\r\n         removeTodos: (state,action)=>{\r\n             return state.filter(item=> item.id!== action.payload);\r\n         },\r\n         updateTodos: (state,action) => {\r\n             return state.map(todo=>{\r\n                 if(todo.id===action.payload.id){\r\n                     return{\r\n                         ...todo,\r\n                         item:action.this.payload.item,\r\n                     }\r\n                 }\r\n                 return todo;\r\n             })\r\n         },\r\n         completeTodos:(state,action) => {\r\n            return state.map(todo=>{\r\n                if(todo.id===action.payload){\r\n                    return{\r\n                        ...todo,\r\n                        completed:true,\r\n                    }\r\n                }\r\n                return todo;\r\n            })\r\n         }\r\n     },\r\n });\r\n\r\n export const {addTods,removeTodos,updateTodos,completeTodos} = addTodoReducer.actions;\r\n export const reducer = addTodoReducer.reducer;\r\n","import React, {useRef} from 'react'\r\nimport {AiFillEdit} from \"react-icons/ai\";\r\nimport {IoCheckmarkDoneSharp,IoClose} from \"react-icons/io5\";\r\n\r\n\r\n\r\nconst Todoitem = (props) => {\r\n    const {item, updateTodo, completeTodo, removeTodo} = props;\r\n    const inputRef = useRef(true);\r\n\r\n    const changeFocus = () => {\r\n        inputRef.current.disabled = false;\r\n        inputRef\r\n            .current\r\n            .focus();\r\n    };\r\n\r\n    const update = (id, value, e) => {\r\n        if (e.which === 13) {\r\n            updateTodo({id, item: value});\r\n            inputRef.current.disabled = true;\r\n        }\r\n    }\r\n    return (\r\n        <li key={item.id} className=\"card\">\r\n            <textarea\r\n                ref={inputRef}\r\n                disabled={inputRef}\r\n                defaultValue={item.item}\r\n                onKeyPress={(e) => update(item.id, inputRef.current.value, e)}></textarea>\r\n            <div className=\"btns\">\r\n                <button onClick={() => changeFocus()}><AiFillEdit/></button>\r\n\r\n                {item.completed === false && (\r\n                <button  style={{color:\"green\"}} onClick={() => completeTodo(item.id)}><IoCheckmarkDoneSharp/></button>\r\n                ) }\r\n\r\n                <button  style={{color:\"red\"}} onClick={() => removeTodo(item.id)}><IoClose/></button>\r\n            </div>\r\n            {item.completed && <span className=\"completed\">done</span>}\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Todoitem\r\n","import React, {useState} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {addTods, completeTodos, removeTodos, updateTodos} from '../redux/reducer';\r\nimport Todoitem from './Todoitem';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {todos: state};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addTodo: (obj) => dispatch(addTods(obj)),\r\n        removeTodo: (id) => dispatch(removeTodos(id)),\r\n        updateTodo: (obj) => dispatch(updateTodos(obj)),\r\n        completeTodo: (id) => dispatch(completeTodos(id))\r\n    };\r\n};\r\n\r\nconst DisplayTodos = (props) => {\r\n    const [sort, setSort] = useState(\"active\")\r\n    return (\r\n        <div className=\"displaytodos\">\r\n            <div className=\"buttons\">\r\n                <button onClick={() => setSort(\"active\")}>active</button>\r\n                <button onClick={() => setSort(\"completed\")}>completed</button>\r\n                <button onClick={() => setSort(\"all\")}>all</button>\r\n            </div>\r\n            <ul>\r\n                {\r\n                    props.todos.length > 0 && sort === \"active\"\r\n                        ? props\r\n                            .todos\r\n                            .map(item => {\r\n                                return (item.completed === false && (\r\n                                    <Todoitem\r\n                                        key={item.id}\r\n                                        item={item}\r\n                                        removeTodo={props.removeTodo}\r\n                                        updateTodo={props.updateTodo}\r\n                                        completeTodo={props.completeTodo}/>\r\n                                ));\r\n                            })\r\n\r\n                        : null\r\n                }\r\n                {\r\n                    props.todos.length > 0 && sort === \"completed\"\r\n                        ? props\r\n                            .todos\r\n                            .map(item => {\r\n                                return (item.completed === true && (\r\n                                    <Todoitem\r\n                                        key={item.id}\r\n                                        item={item}\r\n                                        removeTodo={props.removeTodo}\r\n                                        updateTodo={props.updateTodo}\r\n                                        completeTodo={props.completeTodo}/>\r\n                                ));\r\n                            })\r\n\r\n                        : null\r\n                }\r\n                {\r\n                    props.todos.length > 0 && sort === \"all\"\r\n                        ? props\r\n                            .todos\r\n                            .map(item => {\r\n                                return (\r\n                                    <Todoitem\r\n                                        key={item.id}\r\n                                        item={item}\r\n                                        removeTodo={props.removeTodo}\r\n                                        updateTodo={props.updateTodo}\r\n                                        completeTodo={props.completeTodo}/>\r\n                                );\r\n                            })\r\n\r\n                        : null\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodos);","import React, { useState} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {addTods, completeTodos, removeTodos, updateTodos} from '../redux/reducer';\r\n\r\nimport {GoPlus} from \"react-icons/go\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {todos: state};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addTodo: (obj) => dispatch(addTods(obj)),\r\n        // removeTodo: (id) => dispatch(removeTodos(id)),\r\n        // updateTodo: (obj) => dispatch(updateTodos(obj)),\r\n        // completeTodo: (id) => dispatch(completeTodos(id))\r\n    };\r\n};\r\nconst Todos = (props) => {\r\n    const [todo, setTodo] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        setTodo(e.target.value);\r\n    }\r\n\r\n    const add=()=>{\r\n        props.addTodo({\r\n            id: Math.floor(Math.random() * 1000),\r\n            item: todo,\r\n            completed: false\r\n        });\r\n        setTodo(\"\");\r\n\r\n    }\r\n    // console.log(\"props from store\",props);\r\n    return (\r\n        <div className=\"addTodos\">\r\n            <input type=\"text\" onChange={(e) => handleChange(e)} className=\"todo-input\" value={todo}/>\r\n            <button\r\n                className=\"add-btn\"\r\n                onClick={() => add()}><GoPlus/></button>\r\n\r\n            <br/>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\r\n","\nimport './css/main.css';\nimport DisplayTodos from './components/DisplayTodos';\nimport Todos from './components/Todos';\n\nimport {motion} from \"framer-motion\";\n\nfunction App() {\n  return (\n    \n    <div className=\"App\">\n      <motion.h1\n      whileHover={{scale:1.1}}\n      animate={{y:0}}\n      initial={{y:-200}}\n      transition={{type:\"spring\",duration:0.5}}\n      >todo app</motion.h1>\n      <Todos/>\n      <DisplayTodos/>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { reducer } from \"./reducer\"\r\n\r\nconst store = configureStore({\r\n    reducer: reducer,\r\n})\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n       <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}